int optCount1 : c개수
optCount2 : t개수
e_flag : e옵션시 1로 바뀜
p_flag : p옵션시 1로 바뀜
t_flag : t옵션시 1로 바뀜
c_flag : c옵션시 1로 바뀜
void optionE(char*);
void optionP();
void optionH();
void optionC(int count);
char cName[5][MAX_SIZE];
char eName[MAX_SIZE];
char tName[5][MAX_SIZE];

int array_count=0;

// 입력 인자를 판정하기!

//-h옵션이 단독으로 있을 때
	//종료
	//구현해놨음

//-c옵션이 단독으로 있을 때
	
	//STUDENT ANSWER 폴더가 인자에 포함되지 않는 경우
		//.csv파일의 유무 판단
			//없으면 에러
			
			//있으면
			int cOptCheck=0;
			int cSum[5];
			while(cOptCheck<optCount1){
				
				int cComplete = 1;
				//제일 첫번째줄을 버릴거야.
					//->첫번째 줄을 그냥 읽어 더미변수에
				//두번째줄부터는 한줄씩 읽어
					while(fgets로 더이상 못읽으면 나온다){
					//아직 csv파일을 읽는거야
			
						//,앞을 토큰분리시킬거야
							//cName[cOptCheck]이랑 비교해서 같은 학번이 있으면 계속 토큰분리
 								//같은학번이 아니면 
									continue;
							while(토큰분리조건){
							//,가 더이상 나오지 않을때까지 하고  
							}
							//제일 마지막 sum부분은 cSum에 따로 받아서 정리하자
							//완료되었음을 나타내고(변수cComplete = 0로 체크), break!		
							
					}
					// 만약 같은 학번이 없다면?
					if(cComplete){
						printf("사람이 없어서 출력못함\n");
					}				
				cOptCheck++;
			}



while(array_count<argc)
	
	//'-'인식 (Q. 파일 이름 사이에 '-'가 있으면??) ->옵션인지 인자인지 구분

	if(argv[array_count][0] == '-'){
		array_count++;
		//옵션이면 어떤 옵션인지 파악해서 함수에 넣든 결과를 출력하든...
			-h : 사용법출력하고 종료
			-p : optionP함수로 들어감. => 점수파일 읽어오기, 읽어온 것들로 sum배열 채워서 평균출력
			-e : 먼저 인자가 오나 안오나 체크,
				
				// 인자가 오면?  다음에 오는게 -가 있는지 없는지 확인  
					// -가 없으면?
						flag_e를 1로 만들기
						뒤에 오는 인자 하나만 e배열에 넣어서 저장
					// -가 있으면?
						//-e 옵션이 없으니 error
				// 안오면? 
					// error
			-t : 
				//810번째 줄에 구현해놓음
				//인자가 오면?
					//-가 있는지 없는지
					//-가 있으면?
						error
					//-가 없으면
						while(optCount2<5)
							optCount2++;
							
							//다음 인자가 -인지 아닌지 확인
								//맞으면
									break;
								//아니면
									//t배열에 저장
			-c:				//인자가 오면?
				//-가 있는지 없는지
				//-가 있으면?
					error
				//-가 없으면
					while(optCount1<5)
						optCount1++;
						//다음 인자가 -인지 아닌지 확인
							//맞으면
								break;
							//아니면
								//c배열에 저장
			}	
		else//옵션이 아니면 넘긴다
			array_count++;







// 옵션이 뭐가 들어왔는지
// 인자가 뭔지 안다!
// 그럼, 함수가 있다고 가정하면, 어떻게 해야 되나?
// 함수가 언제 실행되는지를 한번 생각해보자!

//-h옵션
	//들어오자마자 그냥 실행되면 끝난다
//-e옵션(함수에서 할거다...)
	
		//어디에? DIRNAME/학번/문제번호_error.txt
		//만약 DIRNAME이 존재하면 삭제후 다시 생성
			char dirPathName[MAX_SIZE];
			sprintf(dirPathName,"%s/%s",path,DIRNAME);

			if(mkdir(dirPathName,0777)<0){//에러 -> 이미 존재함일 수도 있고 다른 에러일 수도 있다.
				//먼저 삭제해보자.
				char deleteDirname[MAX_SIZE];
				sprintf(deleteDirname,"rmdir -rf ./%s",dirPathName);
				system(deleteDirname);
				//삭제했으니 다시생성
					if(mkdir(dirPathName,0777)<0){
						//파일의 존재때문에 발생한 에러가 아님.
						fprintf(stderr, "mkdir error");
						exit(1);
					}		
			}
			
			//DIRNAME 폴더가 생성됐다.
		
		// DIRNAME 밑에 학번 폴더 생성	
		//studentId에 학번이 저장되어 있음. 개수는 num_s
			char studentPathName[MAX_SIZE];
			int p;
			for(p=0;p<num_s;p++){
				sprintf(studentPathName,"%s/%s/%s",path,DIRNAME,studentId[i]);

				if(mkdir(dirPathName,0777)<0){
					fprintf(stderr, "mkdir error for %s",studentPathName);
					exit(1);
				}
			}
		//학번들 폴더 생성완료

			//에러메세지 txt에 저장... -> 표준에러를 리다이렉션해준다.
										




// -p옵션
	//채점을 진행하면서 각 학생의 점수 출력 및 전체 평균 출력
	
	//프로그램 채점 제일 마지막에 실행 -> main의 끝부분

	double average=0;
	int u_count;
	if(p_flag){
		
		//studentId에 학번이 저장되어 있음. 개수는 num_s
		for(u_count=0;u_count<num_s;u_count++){
			printf("%s is finished.. score : %.1lf\n,studentId[u_count],sum[u_count]);
			average+=sum[u_count];
		}
		printf("Total average : %.2lf\n",average/num_s);
	}
	else{

		for(u_count=0;u_count<num_s;u_count++){
			printf("%s is finished..\n",studentId[u_count]);
		}

	}

// -c옵션
	//채점결과 파일이 있는 경우 해당 학생들의 점수 출력

	//cName에 학번 저장
	//c옵션이 단독으로 쓰일 경우는 이미 앞에서 했음.
	
	//STD_DIR ANS_DIR이랑 같이 쓰일 경우
	//이 경우 c옵션은 맨 끝에 쓰인다 -> 함수로 안만들고 메인에 때려박는다
		int cOpt_count;	
		int stdId_Check;
		int cComplete_check=1;
		for(cOpt_count=0;cOpt_count<optCount1;cOpt_count++){
			//학번체크하자
			for(stdId_Check=0;stdId_Check<num_s;stdId_Check++){
				//같은 학번이면 나갈거야
				if(!strcmp(cName[cOpt_count],studentId[stdId_Check])){
					cComplete_check=0;
					int index_sum_check=atoi(cName[cOpt_count])-20190001;
					printf("%s's score : %.2lf\n",cName[cOpt_count],sum[index_sum_check]);
					break;
				}
	
				
			}

			//옵션인자로 받은 학번이 내 학번디렉토리에 없다면
			if(cComplete_check){
				printf("사람이 없어서 출력못함\n");
			}		
		}
		
		
			

